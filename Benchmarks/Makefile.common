ALL ?= sequential/classes parallel/classes
IMPLEMENTATION=$(DPJ_ROOT)/Implementation
RUNTIME=$(IMPLEMENTATION)/Runtime
SCRIPTS=$(DPJ_ROOT)/Scripts
DPJ=dpj
DPJ-PAR=$(DPJ) -cp parallel/classes/
DPJ-SEQ=$(DPJ) -cp sequential/classes/
DPJ-INST=$(DPJ) -cp instrument/classes/
DPJC-PAR=dpjc
DPJC-SEQ=$(DPJC-PAR) -seq
DPJC-INST=$(DPJC-SEQ) -instrument
JAVAC=dpj-javac
DPJ-PAR-TEST= $(DPJ-PAR) -ea
DPJ-SEQ-TEST=$(DPJ-SEQ) -ea
DPJ-INST-TEST=$(DPJ-INST) -ea
SRCS= $(wildcard dpj/*.java)
RUNTIME_JAVA=$(RUNTIME)/dpj/*.java

all :: $(ALL)

sequential/java : $(SRCS) sequential
	rm -Rf $@
	mkdir $@
	$(DPJC-SEQ) -d $@ dpj/*.java $(RUNTIME_JAVA)
sequential/classes : sequential/java
	rm -Rf $@
	mkdir $@
	$(JAVAC) -d $@ sequential/java/$(PACKAGE)/*.java
parallel/java : $(SRCS) parallel
	rm -Rf $@
	mkdir $@
	$(DPJC-PAR) -d parallel/java dpj/*.java $(RUNTIME_JAVA)
parallel/classes : parallel/java
	rm -Rf $@
	mkdir $@
	$(JAVAC) -d parallel/classes parallel/java/$(PACKAGE)/*.java
instrument/java : $(SRCS) instrument
	rm -Rf $@
	mkdir $@
	$(DPJC-INST) -d instrument/java dpj/*.java $(RUNTIME_JAVA)
instrument/classes : instrument/java
	rm -Rf $@
	mkdir $@
	$(JAVAC) -d instrument/classes instrument/java/$(PACKAGE)/*.java

countAll :: sequential/java
	$(DPJC-SEQ) -count -nowarn -d sequential/java dpj/*.java $(RUNTIME)/dpj/*.java

count ::
	perl $(SCRIPTS)/count.pl $(RUNTIME) .

sequential :
	mkdir $@

parallel :
	mkdir $@

instrument :
	mkdir $@

clean :
	rm -Rf sequential parallel instrument
	$(CLEAN)

.PRECIOUS: java/%.java
